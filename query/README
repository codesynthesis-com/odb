This example shows how to use the ODB Query Language to search the database
for persistent objects matching certain criteria.

The example consists of the following files:

person.hxx
  Header file defining the 'person' persistent class.

person-odb.hxx
person-odb.ixx
person-odb.cxx 
person.sql
  The first three files contain the database support code and the last file
  contains the database schema for the person.hxx header.

  These files are generated by the ODB compiler from person.hxx using the
  following command line:

  odb -d <database> --generate-query --generate-schema person.hxx
  
  Where <database> stands for the database system we are using, for example,
  'mysql'.

database.hxx
  Contains the create_database() function which instantiates the concrete
  database class corresponding to the database system we are using.

driver.cxx
  Driver for the example. It includes the person.hxx and person-odb.hxx
  headers to gain access to the 'person' class and the database support
  code for this class. It also includes database.hxx for the 
  create_database() function declaration.
    
  In main() the driver first calls create_database() to obtain the database
  instance. It then persists a number of 'person' objects in the database
  and executes a number of queries to find objects matching various criteria.

To run the example we first need to create the database schema. Using MySQL
as an example, this can be achieved with the following command:

mysql --user=odb_test --database=odb_test < person.sql

Here we use 'odb_test' as the database login and also 'odb_test' as the
database name.

Once the database schema is ready, we can run the example (using MySQL as
the database):

./driver --user odb_test --database odb_test

