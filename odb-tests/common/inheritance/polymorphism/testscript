# file      : common/inheritance/polymorphism/testscript
# license   : GNU GPL v2; see accompanying LICENSE file

.include ../../../database-options.testscript

+cat <<EOI >=output
  base pre_persist 1 const
  base post_persist 1 const
  derived pre_persist 2 const
  derived post_persist 2 const
  base pre_load 0
  base post_load 1
  derived pre_load 0 const
  derived post_load 2 const
  base pre_load 1
  base post_load 1
  derived pre_load 2 const
  derived post_load 2 const
  base pre_load 1
  base post_load 1
  derived pre_load 2 const
  derived post_load 2 const
  base pre_update 1 const
  base post_update 1 const
  derived pre_update 2 const
  derived post_update 2 const
  base pre_load 0
  base post_load 1
  derived pre_load 0 const
  derived post_load 2 const
  base pre_erase 1 const
  base post_erase 1 const
  derived pre_erase 2 const
  derived post_erase 2 const
  derived pre_persist 3 const
  derived post_persist 3 const
  derived pre_persist 4 const
  derived post_persist 4 const
  derived pre_load 0 const
  derived pre_load 0 const
  derived post_load 4 const
  derived post_load 3 const
  EOI

test.redirects += >>>../output

: mysql
:
if $mysql
{
  .include ../../../mysql-schema.testscript

  for s: $schemas
    cat $out_base/"$s"($multi ? '-mysql' : '').sql | $create_schema_cmd

  $* ($multi ? 'mysql' : ) $mysql_options
}

: sqlite
:
if $sqlite
{
  .include ../../../sqlite.testscript

  $*
}

: pgsql
:
if $pgsql
{
  .include ../../../pgsql-schema.testscript

  for s: $schemas
    $create_schema_cmd -f $out_base/"$s"($multi ? '-pgsql' : '').sql

  $* ($multi ? 'pgsql' : ) $pgsql_options
}

: oracle
:
if $oracle
{
  .include ../../../oracle-schema.testscript

  for s: $schemas
    $create_schema_cmd "@$out_base/$s"($multi ? '-oracle' : '').sql

  $* ($multi ? 'oracle' : ) $oracle_options
}

: mssql
:
if $mssql
{
  .include ../../../mssql-schema.testscript

  for s: $schemas
    $create_schema_cmd -i $out_base/"$s"($multi ? '-mssql' : '').sql

  $* ($multi ? 'mssql' : ) $mssql_options
}
