// file      : odb/oracle/version.hxx.in
// license   : ODB NCUEL; see accompanying LICENSE file

#ifndef LIBODB_ORACLE_VERSION // Note: using the version macro itself.

// New numeric version format is AAAAABBBBBCCCCCDDDE where:
//
// AAAAA - major version number
// BBBBB - minor version number
// CCCCC - bugfix version number
// DDD   - alpha / beta (DDD + 500) version number
// E     - final (0) / snapshot (1)
//
// When DDDE is not 0, 1 is subtracted from AAAAABBBBBCCCCC. For example:
//
// Version      AAAAABBBBBCCCCCDDDE
//
// 0.1.0        0000000001000000000
// 0.1.2        0000000001000020000
// 1.2.3        0000100002000030000
// 2.2.0-a.1    0000200001999990010
// 3.0.0-b.2    0000299999999995020
// 2.2.0-a.1.z  0000200001999990011
//
#define LIBODB_ORACLE_VERSION_FULL  $libodb_oracle.version.project_number$ULL
#define LIBODB_ORACLE_VERSION_STR   "$libodb_oracle.version.project$"
#define LIBODB_ORACLE_VERSION_ID    "$libodb_oracle.version.project_id$"

#define LIBODB_ORACLE_VERSION_MAJOR $libodb_oracle.version.major$
#define LIBODB_ORACLE_VERSION_MINOR $libodb_oracle.version.minor$
#define LIBODB_ORACLE_VERSION_PATCH $libodb_oracle.version.patch$

#define LIBODB_ORACLE_PRE_RELEASE   $libodb_oracle.version.pre_release$

#define LIBODB_ORACLE_SNAPSHOT      $libodb_oracle.version.snapshot_sn$ULL
#define LIBODB_ORACLE_SNAPSHOT_ID   "$libodb_oracle.version.snapshot_id$"

#include <odb/version.hxx>

$libodb.check(LIBODB_VERSION_FULL, LIBODB_SNAPSHOT)$


// Old/deprecated numeric version format is AABBCCDD where:
//
// AA - major version number
// BB - minor version number
// CC - bugfix version number
// DD - alpha / beta (DD + 50) version number
//
// When DD is not 00, 1 is subtracted from AABBCC. For example:
//
// Version     AABBCCDD
// 2.0.0       02000000
// 2.1.0       02010000
// 2.1.1       02010100
// 2.2.0.a1    02019901
// 3.0.0.b2    02999952
//
#define LIBODB_ORACLE_VERSION 2049978

#endif // LIBODB_ORACLE_VERSION
