# file      : odb/buildfile
# copyright : Copyright (c) 2009-2017 Code Synthesis Tools CC
# license   : GNU GPL v2; see accompanying LICENSE file

lib{odb}:          {hxx ixx txx cxx}{* -version-build2} \
                   {hxx}{version-build2}                \
           details/{hxx ixx txx}{*}                     \
           details/{cxx}{* -condition -lock -mutex}     \
    details/build2/{h}{*}                               \
      details/meta/{hxx}{*}                             \
details/shared-ptr/{hxx ixx txx cxx}{*}                 \
     details/win32/{hxx}{windows}

hxx{version-build2}: in{version-build2} $src_root/file{manifest}
hxx{version-build2}: dist = true

# For pre-releases use the complete version to make sure they cannot be used
# in place of another pre-release or the final version.
#
if $version.pre_release
  lib{odb}: bin.lib.version = @"-$version.project_id"
else
  lib{odb}: bin.lib.version = @"-$version.major.$version.minor"

cxx.poptions =+ "-I$out_root" "-I$src_root" -DLIBODB_BUILD2
obja{*}: cxx.poptions += -DLIBODB_STATIC_BUILD
objs{*}: cxx.poptions += -DLIBODB_SHARED_BUILD

lib{odb}: cxx.export.poptions = "-I$out_root" "-I$src_root" -DLIBODB_BUILD2
liba{odb}: cxx.export.poptions += -DLIBODB_STATIC
libs{odb}: cxx.export.poptions += -DLIBODB_SHARED

# Install into the odb/ subdirectory of, say, /usr/include/ recreating
# subdirectories.
#
install_include = [dir_path] include/odb/

{hxx ixx txx}{*}: install         = $install_include
{hxx ixx txx}{*}: install.subdirs = true

if ($cxx.target.class != "windows")
  details/win32/*: install = false

# We want these to be picked up even when LIBODB_BUILD2 is not defined.
#
hxx{version}@./:     install = false
hxx{version-build2}: install = $install_include/version.hxx

details/build2/:
{
  if ($cxx.id == "msvc")
  {
    h{config}@./:    install = false
    h{config-vc}@./: install = $install_include/details/
  }
  else
  {
    h{config}@./:    install = $install_include/details/
    h{config-vc}@./: install = false
  }
}
