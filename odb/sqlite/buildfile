# file      : odb/sqlite/buildfile
# copyright : Copyright (c) 2009-2017 Code Synthesis Tools CC
# license   : GNU GPL v2; see accompanying LICENSE file

import int_libs  = libodb%lib{odb}
import int_libs += libsqlite3%lib{sqlite3}

lib{odb-sqlite}:                                                  \
               {hxx            }{ auto-handle                   } \
               {hxx            }{ binding                       } \
               {hxx            }{ blob                          } \
               {hxx            }{ blob-stream                   } \
               {hxx ixx     cxx}{ connection                    } \
               {hxx         cxx}{ connection-factory            } \
               {hxx     txx    }{ container-statements          } \
               {hxx ixx     cxx}{ database                      } \
               {hxx         cxx}{ error                         } \
               {hxx         cxx}{ exceptions                    } \
               {hxx            }{ forward                       } \
               {hxx     txx    }{ no-id-object-result           } \
               {hxx     txx    }{ no-id-object-statements       } \
               {hxx     txx    }{ polymorphic-object-result     } \
               {hxx     txx    }{ polymorphic-object-statements } \
               {hxx         cxx}{ prepared-query                } \
               {hxx ixx txx cxx}{ query                         } \
               {            cxx}{ query-const-expr              } \
               {hxx ixx txx cxx}{ query-dynamic                 } \
               {hxx     txx    }{ section-statements            } \
               {hxx     txx    }{ simple-object-result          } \
               {hxx ixx txx cxx}{ simple-object-statements      } \
               {hxx            }{ sqlite-types                  } \
               {hxx     txx cxx}{ statement-cache               } \
               {hxx         cxx}{ statement                     } \
               {hxx         cxx}{ statements-base               } \
               {hxx         cxx}{ stream                        } \
               {hxx            }{ text                          } \
               {hxx            }{ text-stream                   } \
               {hxx         cxx}{ tracer                        } \
               {hxx         cxx}{ traits                        } \
               {hxx            }{ traits-calls                  } \
               {hxx ixx     cxx}{ transaction                   } \
               {hxx ixx     cxx}{ transaction-impl              } \
               {hxx            }{ version                       } \
               {hxx     txx    }{ view-result                   } \
               {hxx     txx    }{ view-statements               } \
       details/{hxx            }{ config                        } \
       details/{hxx            }{ conversion                    } \
       details/{hxx            }{ export                        } \
       details/{hxx ixx     cxx}{ options                       } \
details/build2/{h              }{ config                        } \
details/build2/{h              }{ config-vc                     } \
                                  $int_libs

# For pre-releases use the complete version to make sure they cannot be used
# in place of another pre-release or the final version.
#
if $version.pre_release
  lib{odb-sqlite}: bin.lib.version = @"-$version.project_id"
else
  lib{odb-sqlite}: bin.lib.version = @"-$version.major.$version.minor"

cxx.poptions =+ "-I$out_root" "-I$src_root" -DLIBODB_SQLITE_BUILD2
obja{*}: cxx.poptions += -DLIBODB_SQLITE_STATIC_BUILD
objs{*}: cxx.poptions += -DLIBODB_SQLITE_SHARED_BUILD

lib{odb-sqlite}: cxx.export.poptions = "-I$src_root" -DLIBODB_SQLITE_BUILD2
liba{odb-sqlite}: cxx.export.poptions += -DLIBODB_SQLITE_STATIC
libs{odb-sqlite}: cxx.export.poptions += -DLIBODB_SQLITE_SHARED

lib{odb-sqlite}: cxx.export.libs = $int_libs

details/:
{
  if $cli.configured
  {
    cli.cxx{options}: cli{options}

    cli.options += --include-with-brackets --include-prefix odb/sqlite/details \
--guard-prefix LIBODB_SQLITE_DETAILS --generate-file-scanner \
--cli-namespace odb::sqlite::details::cli --long-usage

    # Include generated cli files into the distribution.
    #
    cli.cxx{*}: dist = true
  }

  # But don't install their headers since they are only used internally in the
  # database implementation.
  #
  {hxx ixx}{options}: install = false
}

# Install into the odb/sqlite/ subdirectory of, say, /usr/include/.
#
install.include = $install.include/odb/sqlite/
install.include.subdirs = true # Recreate subdirectories.

# We want these to be picked up even when LIBODB_SQLITE_BUILD2 is not defined.
#
details/build2/:
{
  if ($cxx.id == "msvc")
  {
    h{config}@./:    install = false
    h{config-vc}@./: install = $install.include/details/
  }
  else
  {
    h{config}@./:    install = $install.include/details/
    h{config-vc}@./: install = false
  }
}
